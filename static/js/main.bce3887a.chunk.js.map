{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","userId","usersFromServer","find","App","useState","setName","setTitle","currentTodos","setTodo","errorUser","setErrorUser","errorTitle","setErrorTitle","action","method","onSubmit","event","preventDefault","selectedUser","maxId","Math","max","newTodo","type","placeholder","value","onChange","target","char","eng","test","ru","checkCharacter","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bce3887a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport './App.scss';\n\nconst getUserById = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [currentTodos, setTodo] = useState(todos);\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  const handleAddButton = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!name) {\n      setErrorUser(true);\n    }\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n\n    if (!title || !name) {\n      return;\n    }\n\n    const selectedUser = usersFromServer.find(user => user.name === name);\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    if (selectedUser) {\n      const newTodo = [\n        ...currentTodos,\n        {\n          id: maxId + 1,\n          title,\n          userId: maxId + 1,\n          completed: false,\n          user: {\n            id: maxId + 1,\n            name,\n            username: selectedUser.username,\n            email: selectedUser.email,\n          },\n        },\n      ];\n\n      setTodo(newTodo);\n      setName('');\n      setTitle('');\n    }\n  };\n\n  const checkCharacter = (char: string) => {\n    const eng = /^[ 0-9A-Za-z]*$/.test(char);\n    const ru = /^[ 0-9А-Яа-я]*$/.test(char);\n\n    return eng || ru;\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (checkCharacter(value)) {\n      setTitle(value);\n      setErrorTitle(false);\n    }\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(event.target.value);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddButton}\n      >\n        <div className=\"field\">\n          <span>Title: </span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          {errorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <span>User: </span>\n          <select\n            data-cy=\"userSelect\"\n            value={name}\n            onChange={handleChangeUser}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {errorUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}